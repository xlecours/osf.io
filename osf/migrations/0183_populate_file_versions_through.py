# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2019-03-03 17:52
from __future__ import unicode_literals

import logging

from django.db import migrations, connection

logger = logging.getLogger(__file__)


def restore_default_through_table(state, schema):
    sql = """
        DROP TABLE osf_basefilenode_versions;
        CREATE TABLE osf_basefilenode_versions AS
        SELECT
            new_thru.basefilenode_id,
            new_thru.fileversion_id
        FROM
            osf_basefileversionsthrough AS new_thru;

        ALTER TABLE osf_basefilenode_versions ADD COLUMN id SERIAL PRIMARY KEY;
        ALTER TABLE osf_basefilenode_versions ADD CONSTRAINT osf_basefilenod_basefilenode_id_b0knah27_fk_osf_basefilenode_id FOREIGN KEY (basefilenode_id) REFERENCES osf_basefilenode DEFERRABLE INITIALLY DEFERRED;
        ALTER TABLE osf_basefilenode_versions ALTER COLUMN basefilenode_id
        SET
            DATA TYPE INTEGER;
        ALTER TABLE osf_basefilenode_versions ALTER COLUMN fileversion_id
        SET
            NOT NULL;
        ALTER TABLE osf_basefilenode_versions ALTER COLUMN fileversion_id
        SET
            DATA TYPE INTEGER;
        ALTER TABLE osf_basefilenode_versions ALTER COLUMN basefilenode_id
        SET
            NOT NULL;
        ALTER TABLE osf_basefilenode_versions ADD CONSTRAINT osf_basefilenode__fileversion_id_93etanfc_fk_osf_fileversion_id FOREIGN KEY (fileversion_id) REFERENCES osf_fileversion DEFERRABLE INITIALLY DEFERRED;
        ALTER TABLE osf_basefilenode_versions ADD CONSTRAINT osf_basefilenode__fileversion_uniq564 UNIQUE (basefilenode_id, fileversion_id);
        CREATE INDEX
        ON osf_basefilenode_versions (basefilenode_id, fileversion_id);
        CREATE INDEX
        ON osf_basefilenode_versions (basefilenode_id);
        CREATE INDEX
        ON osf_basefilenode_versions (fileversion_id);
    """
    with connection.cursor() as cursor:
        cursor.execute(sql)


def populate_fileversion_name(state, schema):

    sql = """
        DROP TABLE osf_basefileversionsthrough;
        CREATE TABLE osf_basefileversionsthrough AS
        SELECT
            obfv.basefilenode_id,
            obfv.fileversion_id,
            ob.name as version_name
        FROM
            osf_basefilenode_versions obfv
            LEFT JOIN
                osf_basefilenode ob
                ON obfv.basefilenode_id = ob.id;
        ALTER TABLE osf_basefileversionsthrough ADD COLUMN id SERIAL PRIMARY KEY;
        ALTER TABLE osf_basefileversionsthrough ADD CONSTRAINT osf_basefilenod_basefilenode_id_b0nwad27_fk_osf_basefilenode_id FOREIGN KEY (basefilenode_id) REFERENCES osf_basefilenode DEFERRABLE INITIALLY DEFERRED;
        ALTER TABLE osf_basefileversionsthrough ALTER COLUMN basefilenode_id
        SET
            DATA TYPE INTEGER;
        ALTER TABLE osf_basefileversionsthrough ALTER COLUMN fileversion_id
        SET
            NOT NULL;
        ALTER TABLE osf_basefileversionsthrough ALTER COLUMN fileversion_id
        SET
            DATA TYPE INTEGER;
        ALTER TABLE osf_basefileversionsthrough ALTER COLUMN basefilenode_id
        SET
            NOT NULL;
        ALTER TABLE osf_basefileversionsthrough ADD CONSTRAINT osf_basefilenode__fileversion_id_93nwadfc_fk_osf_fileversion_id FOREIGN KEY (fileversion_id) REFERENCES osf_fileversion DEFERRABLE INITIALLY DEFERRED;
        ALTER TABLE osf_basefileversionsthrough ADD CONSTRAINT osf_basefilenode__fileversion_uniq UNIQUE (basefilenode_id, fileversion_id);
        CREATE INDEX
        ON osf_basefileversionsthrough (basefilenode_id, fileversion_id);
        CREATE INDEX
        ON osf_basefileversionsthrough (basefilenode_id);
        CREATE INDEX
        ON osf_basefileversionsthrough (fileversion_id);
    """

    with connection.cursor() as cursor:
        cursor.execute(sql)

class Migration(migrations.Migration):

    dependencies = [
        ('osf', '0182_add_custom_file_versions_through'),
    ]

    operations = [
        migrations.RunPython(populate_fileversion_name, restore_default_through_table)
    ]
